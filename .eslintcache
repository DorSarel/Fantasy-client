[{"C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\index.tsx":"1","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\App.tsx":"2","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\sagas\\index.ts":"3","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\redux\\index.ts":"4","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\common\\GlobalPath.ts":"5","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\pages\\PlayersPage.tsx":"6","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\pages\\CreateLeaguePage.tsx":"7","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\layout\\Header.tsx":"8","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\pages\\HomePage.tsx":"9","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\pages\\MyTeamPage.tsx":"10","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\sagas\\playerSaga.ts":"11","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\redux\\playerSlice.ts":"12","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\common\\SelectInput.tsx":"13","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\common\\PlayersTable.tsx":"14","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\PlayersPage\\PlayersPositionsFilter.tsx":"15","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\pages\\CreateLeagueArea\\CreateLeagueStep.tsx":"16","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\common\\ListView.tsx":"17","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\common\\MediaBox.tsx":"18","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\common\\Slider.tsx":"19","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\sagas\\apis\\playerApi.ts":"20","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\common\\PlayerData.tsx":"21","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\services\\httpClient.ts":"22"},{"size":679,"mtime":1616163091725,"results":"23","hashOfConfig":"24"},{"size":972,"mtime":1619272092025,"results":"25","hashOfConfig":"24"},{"size":166,"mtime":1616163611418,"results":"26","hashOfConfig":"24"},{"size":247,"mtime":1616147696570,"results":"27","hashOfConfig":"24"},{"size":202,"mtime":1619273478003,"results":"28","hashOfConfig":"24"},{"size":3864,"mtime":1619018521718,"results":"29","hashOfConfig":"24"},{"size":3672,"mtime":1617694073541,"results":"30","hashOfConfig":"24"},{"size":885,"mtime":1619273489211,"results":"31","hashOfConfig":"24"},{"size":1324,"mtime":1618580579936,"results":"32","hashOfConfig":"24"},{"size":2254,"mtime":1619019067355,"results":"33","hashOfConfig":"24"},{"size":437,"mtime":1616163885667,"results":"34","hashOfConfig":"24"},{"size":517,"mtime":1616167311541,"results":"35","hashOfConfig":"24"},{"size":923,"mtime":1617694085448,"results":"36","hashOfConfig":"24"},{"size":2215,"mtime":1618578080215,"results":"37","hashOfConfig":"24"},{"size":1265,"mtime":1616146259003,"results":"38","hashOfConfig":"24"},{"size":2032,"mtime":1617694073540,"results":"39","hashOfConfig":"24"},{"size":566,"mtime":1618577672672,"results":"40","hashOfConfig":"24"},{"size":563,"mtime":1618577672673,"results":"41","hashOfConfig":"24"},{"size":2303,"mtime":1618580083297,"results":"42","hashOfConfig":"24"},{"size":159,"mtime":1616162856658,"results":"43","hashOfConfig":"24"},{"size":601,"mtime":1619018043608,"results":"44","hashOfConfig":"24"},{"size":1921,"mtime":1616162841040,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1dm2dap",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\index.tsx",[],["98","99"],"C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\App.tsx",[],"C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\sagas\\index.ts",[],"C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\redux\\index.ts",[],"C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\common\\GlobalPath.ts",[],"C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\pages\\PlayersPage.tsx",["100","101","102","103","104","105"],"import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport SelectInput from '../common/SelectInput';\r\nimport PlayersPositionsFilter from '../PlayersPage/PlayersPositionsFilter';\r\nimport * as PlayerActions from '../../redux/playerSlice';\r\nimport { IPlayer } from '../../models/Player/PlayerModels';\r\nimport PlayersTable from '../common/PlayersTable';\r\n\r\n// Mock Data\r\nimport players from '../../mocks/freePlayers.json';\r\n\r\nconst headers = [\r\n  {\r\n    key: 'Player',\r\n  },\r\n  {\r\n    key: 'Avg',\r\n  },\r\n  {\r\n    key: 'Weekly Games',\r\n  },\r\n  {\r\n    key: 'Stats',\r\n    subHeaders: [\r\n      {\r\n        key: 'PPG',\r\n      },\r\n      {\r\n        key: 'RPG',\r\n      },\r\n      {\r\n        key: 'FGP',\r\n      },\r\n      {\r\n        key: 'FGS',\r\n      },\r\n      {\r\n        key: 'FGA',\r\n      },\r\n      {\r\n        key: 'FGT',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    key: 'Total',\r\n  },\r\n];\r\n\r\nconst PlayersPage = () => {\r\n  const [positionsFilters, setPositionsFilters] = useState<string[]>([]);\r\n  const [filteredPlayers, setFilteredPlayers] = useState<IPlayer[]>(players);\r\n  const [playersInWatch, setPlayersInWatch] = useState<IPlayer[]>([]); // TODO: should be saved in backend\r\n  const [teamName, setTeamName] = useState('');\r\n  const [weeklyGames, setWeeklyGames] = useState(0);\r\n  const dispatch = useDispatch();\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(PlayerActions.fetchPlayers());\r\n  // }, []);\r\n\r\n  const memoTeams = useMemo(() => {\r\n    const teamsSet = players.reduce<Set<string>>((acc, player) => {\r\n      return acc.add(player.teamName);\r\n    }, new Set<string>());\r\n\r\n    return Array.from(teamsSet);\r\n  }, [players]);\r\n\r\n  const memoWeeklyGames = useMemo(\r\n    () =>\r\n      Array.from(\r\n        players.reduce<Set<number>>((acc, player) => {\r\n          return acc.add(player.weeklyGames);\r\n        }, new Set<number>())\r\n      ),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    filterPlayers();\r\n  }, [positionsFilters, teamName, weeklyGames]);\r\n\r\n  const filterPlayers = () => {\r\n    let newFilteredArray: IPlayer[] = JSON.parse(JSON.stringify(players));\r\n\r\n    if (positionsFilters.length > 0) {\r\n      newFilteredArray = newFilteredArray.filter((player) => positionsFilters.includes(player.leagues.standard.pos));\r\n    }\r\n\r\n    if (teamName !== '') {\r\n      newFilteredArray = newFilteredArray.filter((player) => player.teamName === teamName);\r\n    }\r\n\r\n    if (weeklyGames > 0) {\r\n      newFilteredArray = newFilteredArray.filter((player) => player.weeklyGames === weeklyGames);\r\n    }\r\n\r\n    setFilteredPlayers(newFilteredArray);\r\n  };\r\n\r\n  const handlePositionCheck = ({ checked, values }: { checked: boolean; values: string[] }) => {\r\n    if (checked) setPositionsFilters((currentFilters) => [...currentFilters, ...values]);\r\n    else {\r\n      setPositionsFilters((currentFilters) => currentFilters.filter((filter) => !values.includes(filter)));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"players-filters middle-column\">\r\n        <div className=\"players-filters-title\">\r\n          <h1>Players Board</h1>\r\n          <span>Dor's league</span>\r\n        </div>\r\n        <PlayersPositionsFilter onChange={handlePositionCheck} selectedPositions={positionsFilters} />\r\n        <div className=\"players-filters-select\">\r\n          <SelectInput label=\"Teams\" items={memoTeams} onChange={(e) => setTeamName((e.target as HTMLInputElement).value)} />\r\n          <SelectInput label=\"Weekly Games\" items={memoWeeklyGames} onChange={(e) => setWeeklyGames(parseInt((e.target as HTMLInputElement).value))} />\r\n          <SelectInput label=\"Available\" />\r\n          <SelectInput label=\"Healthy\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"players-main middle-column\">\r\n        <PlayersTable headers={headers} players={filteredPlayers} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlayersPage;\r\n","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\pages\\CreateLeaguePage.tsx",["106"],"import React from \"react\";\r\nimport trophy from \"../../assets/images/trophy 1.png\"\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreateLeagueStep from \"./CreateLeagueArea/CreateLeagueStep\";\r\n\r\nconst CreateLeague = () => {\r\n    function getSteps() {\r\n        return ['Create League', 'Invite', 'My Team'];\r\n    }\r\n\r\n    function getStepContent(step: number) {\r\n        switch (step) {\r\n            case 0:\r\n                return <CreateLeagueStep  />\r\n            case 1:\r\n                return <h1>Here...</h1>;\r\n            case 2:\r\n                return <h1>Here...</h1>;\r\n            default:\r\n                return <h1>Done!</h1>;\r\n        }\r\n    }\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const steps = getSteps();\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n        const handleReset = () => {\r\n            setActiveStep(0);\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <div className=\"create-league middle-column\">\r\n                    <div style={{ height: \"13rem\" }} className=\"create-league-title\">\r\n                        <img src={trophy} />\r\n                        <h3>Create your NBA Fantasy League</h3>\r\n                    </div>\r\n                    <Stepper className=\"stepper\" activeStep={activeStep}>\r\n                        <Step >\r\n                            <StepLabel>Create League</StepLabel>\r\n                        </Step>\r\n                        <Step>\r\n                            <StepLabel>invite</StepLabel>\r\n                        </Step>\r\n                        <Step>\r\n                            <StepLabel>my Team</StepLabel>\r\n                        </Step>\r\n                    </Stepper>\r\n                    <div>\r\n                        {activeStep === steps.length ? (\r\n                            <div>\r\n                                <Typography variant=\"body1\" component=\"h3\">\r\n                                    Greate Job!\r\n                                 </Typography>\r\n                                <Button size=\"large\" onClick={handleReset}>\r\n                                    Reset\r\n                                </Button>\r\n                            </div>\r\n                        ) : (\r\n                            <div>\r\n                                <Typography variant=\"body1\" component=\"span\">{getStepContent(activeStep)}</Typography>\r\n                                <div>\r\n                                    <Button size=\"large\" disabled={activeStep === 0} onClick={handleBack} >\r\n                                        Back\r\n                                     </Button>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={handleNext}\r\n                                        size=\"large\"\r\n                                    >\r\n                                        {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\nexport default CreateLeague;\r\n","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\layout\\Header.tsx",[],"C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\pages\\HomePage.tsx",["107","108","109","110"],"import React from 'react';\r\nimport trophy from '../../assets/images/trophy 1.png';\r\nimport twitter from '../../assets/images/twitter-icon.png';\r\nimport instagram from '../../assets/images/instagram-icon.png';\r\nimport youtube from '../../assets/images/youtube-icon.png';\r\nimport GlobalList from '../common/ListView';\r\nimport MediaBox from '../common/MediaBox';\r\nimport { Link } from 'react-router-dom';\r\nimport { GlobalPaths } from '../common/GlobalPath';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <>\r\n      <div className=\"middle-column\">\r\n        <div className=\"welcome-main\">\r\n          <img src={trophy} />\r\n          <h1>Welcome </h1>\r\n          <p>to NBA Fantasy Pro</p>\r\n        </div>\r\n        <br />\r\n        <div className=\"create-join-btn\">\r\n          <Link to={GlobalPaths.createLeagueUrl}>Create a League</Link>\r\n          <Link to=\"\">Join a League</Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"left-boxes left-column\">\r\n        <h2>NBA Recent News: </h2>\r\n        <MediaBox />\r\n        <MediaBox />\r\n        <MediaBox />\r\n      </div>\r\n      <div className=\"right-boxes right-column\">\r\n        <GlobalList header=\"Tonight Games: \" />\r\n        <GlobalList header=\"Last Games: \" />\r\n        <GlobalList header=\"Top Added Players: \" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default HomePage;\r\n","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\pages\\MyTeamPage.tsx",["111","112","113","114","115"],"import React, { useEffect, useState } from 'react';\r\nimport Medal from '../../assets/images/medal.png';\r\nimport hoopers from '../../assets/images/hoopers.png';\r\nimport MediaBox from '../common/MediaBox';\r\nimport ListViewComponent from '../common/ListView';\r\nimport CardsSlider from '../common/Slider';\r\nimport PlayersTable from '../common/PlayersTable';\r\nimport { IPlayer } from '../../models/Player/PlayerModels';\r\n\r\n// Mock Data\r\nimport teams from '../../mocks/teams.json';\r\n\r\nconst headers = [\r\n  {\r\n    key: 'Player',\r\n  },\r\n  {\r\n    key: 'Avg',\r\n  },\r\n  {\r\n    key: 'Weekly Games',\r\n  },\r\n  {\r\n    key: 'Stats',\r\n    subHeaders: [\r\n      {\r\n        key: 'PPG',\r\n      },\r\n      {\r\n        key: 'RPG',\r\n      },\r\n      {\r\n        key: 'FGP',\r\n      },\r\n      {\r\n        key: 'FGS',\r\n      },\r\n      {\r\n        key: 'FGA',\r\n      },\r\n      {\r\n        key: 'FGT',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    key: 'Total',\r\n  },\r\n];\r\n\r\nconst MyTeam = () => {\r\n  const myTeam = teams[0]; // TODO - this is mock data\r\n  return (\r\n    <>\r\n      <div className=\"left-column articles\">\r\n        <h2>Articles: </h2>\r\n        <MediaBox />\r\n        <MediaBox />\r\n        <div className=\"bottom-boxes\">\r\n          <ListViewComponent header=\"Hottest Free Agents: \" />\r\n          <ListViewComponent header=\"Trending Free Agents: \" />\r\n        </div>\r\n      </div>\r\n      <div className=\"middle-column main-div\">\r\n        <img className=\"hoopers\" src={hoopers} />\r\n        <div className=\"main-div-text\">\r\n          <p>{myTeam.name}</p>\r\n          <p>Dor Sarel</p>\r\n          <p>{myTeam.league_name} 20/21</p>\r\n          <div className=\"left-text\">\r\n            <img src={Medal} />\r\n            <p>2nd</p>\r\n            <span>\r\n              {myTeam.stats.games_won}-{myTeam.stats.games_lost}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"slider-main\">\r\n          <CardsSlider />\r\n        </div>\r\n        <PlayersTable headers={headers} players={myTeam.players} />\r\n      </div>\r\n\r\n      <div className=\"right-column weekly-recap\">\r\n        <span>Weekly recap: </span>\r\n        <p className=\"border\"></p>\r\n        <div className=\"twitter-box\">\r\n          <MediaBox />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default MyTeam;\r\n","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\sagas\\playerSaga.ts",["116"],"import { takeLatest, put, call } from 'redux-saga/effects';\r\nimport * as PlayerActions from '../redux/playerSlice';\r\nimport { getPlayers } from './apis/playerApi';\r\n\r\nfunction* fetchPlayers(action: any) {\r\n  try {\r\n    const { data } = yield call(getPlayers);\r\n    console.log(data);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nexport function* playerWatcher() {\r\n  yield takeLatest(PlayerActions.fetchPlayers, fetchPlayers);\r\n}\r\n","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\redux\\playerSlice.ts",["117","118"],"import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { IPlayerResponse, IPlayerStore } from '../models/Player/PlayerModels';\r\n\r\nconst initialState: IPlayerStore = {\r\n  players: [] as IPlayerResponse[],\r\n  error: null,\r\n};\r\n\r\nconst playerSlice = createSlice({\r\n  name: 'players',\r\n  initialState,\r\n  reducers: {\r\n    fetchPlayers: (state) => {\r\n      state.error = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { fetchPlayers } = playerSlice.actions;\r\nexport default playerSlice.reducer;\r\n","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\common\\SelectInput.tsx",[],"C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\common\\PlayersTable.tsx",[],"C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\PlayersPage\\PlayersPositionsFilter.tsx",[],"C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\pages\\CreateLeagueArea\\CreateLeagueStep.tsx",[],"C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\common\\ListView.tsx",[],"C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\common\\MediaBox.tsx",[],"C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\common\\Slider.tsx",["119","120","121","122","123","124"],"import React, { useState } from 'react';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport hoopers from '../../assets/images/hoopers.png';\r\n\r\nconst CardsSlider = () => {\r\n  const [current, setCurrent] = useState(0);\r\n\r\n  const data = [\r\n    {\r\n      header: 'Previous match: ',\r\n      firstTeam: 'Team Hoopers',\r\n      secondTeam: 'Katzav Butchers',\r\n      firstScore: 117,\r\n      secondScore: 105,\r\n      firstImage: <img src={hoopers} />,\r\n      secondImage: <img src={hoopers} />,\r\n    },\r\n    {\r\n      header: 'Current match: ',\r\n      firstTeam: 'Carmon’s Interns',\r\n      secondTeam: 'Team Hoopers',\r\n      firstScore: 117,\r\n      secondScore: 105,\r\n      firstImage: <img src={hoopers} />,\r\n      secondImage: <img src={hoopers} />,\r\n    },\r\n    {\r\n      header: 'Next match: ',\r\n      firstTeam: 'Team Netanel',\r\n      secondTeam: 'Team Hoopers',\r\n      firstScore: 117,\r\n      secondScore: 105,\r\n      firstImage: <img src={hoopers} />,\r\n      secondImage: <img src={hoopers} />,\r\n    },\r\n  ];\r\n\r\n  const nextSlide = () => {\r\n    setCurrent(current === data.length - 1 ? 0 : current + 1);\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    setCurrent(current === data.length ? -1 : current - 1);\r\n  };\r\n  if (!Array.isArray(data) || data.length <= 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <section className=\"slider\">\r\n      <ArrowForwardIosIcon className=\"forward\" onClick={nextSlide} />\r\n      <ArrowBackIosIcon className=\"back\" onClick={prevSlide} />\r\n\r\n      {data.map((slide, index) => {\r\n        return (\r\n          <div className={index === current ? 'slide active' : 'slide'} key={index}>\r\n            <div className=\"card\">\r\n              <p className=\"card-title\">{slide.header}</p>\r\n              <div className=\"card-team\">\r\n                <p>{slide.firstImage}</p>\r\n                <p>{slide.firstTeam}</p>\r\n                <p>{slide.firstScore}</p>\r\n              </div>\r\n              <div className=\"card-team\">\r\n                <p>{slide.secondImage}</p>\r\n                <p>{slide.secondTeam}</p>\r\n                <p>{slide.secondScore}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CardsSlider;\r\n","C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\sagas\\apis\\playerApi.ts",[],"C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\components\\common\\PlayerData.tsx",[],"C:\\Users\\32394\\Desktop\\לימודים\\שנה ד'\\סדנה\\Fantasy-client\\src\\services\\httpClient.ts",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":5,"column":13,"nodeType":"131","messageId":"132","endLine":5,"endColumn":26},{"ruleId":"129","severity":1,"message":"133","line":53,"column":10,"nodeType":"131","messageId":"132","endLine":53,"endColumn":24},{"ruleId":"129","severity":1,"message":"134","line":53,"column":26,"nodeType":"131","messageId":"132","endLine":53,"endColumn":43},{"ruleId":"129","severity":1,"message":"135","line":56,"column":9,"nodeType":"131","messageId":"132","endLine":56,"endColumn":17},{"ruleId":"136","severity":1,"message":"137","line":68,"column":6,"nodeType":"138","endLine":68,"endColumn":15,"suggestions":"139"},{"ruleId":"136","severity":1,"message":"140","line":82,"column":6,"nodeType":"138","endLine":82,"endColumn":47,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":46,"column":25,"nodeType":"144","endLine":46,"endColumn":45},{"ruleId":"129","severity":1,"message":"145","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":15},{"ruleId":"129","severity":1,"message":"146","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":17},{"ruleId":"129","severity":1,"message":"147","line":5,"column":8,"nodeType":"131","messageId":"132","endLine":5,"endColumn":15},{"ruleId":"142","severity":1,"message":"143","line":16,"column":11,"nodeType":"144","endLine":16,"endColumn":31},{"ruleId":"129","severity":1,"message":"148","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"149","line":1,"column":28,"nodeType":"131","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"150","line":8,"column":10,"nodeType":"131","messageId":"132","endLine":8,"endColumn":17},{"ruleId":"142","severity":1,"message":"143","line":65,"column":9,"nodeType":"144","endLine":65,"endColumn":50},{"ruleId":"142","severity":1,"message":"143","line":71,"column":13,"nodeType":"144","endLine":71,"endColumn":32},{"ruleId":"129","severity":1,"message":"151","line":1,"column":22,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"152","line":1,"column":10,"nodeType":"131","messageId":"132","endLine":1,"endColumn":24},{"ruleId":"129","severity":1,"message":"153","line":1,"column":39,"nodeType":"131","messageId":"132","endLine":1,"endColumn":52},{"ruleId":"142","severity":1,"message":"143","line":16,"column":19,"nodeType":"144","endLine":16,"endColumn":40},{"ruleId":"142","severity":1,"message":"143","line":17,"column":20,"nodeType":"144","endLine":17,"endColumn":41},{"ruleId":"142","severity":1,"message":"143","line":25,"column":19,"nodeType":"144","endLine":25,"endColumn":40},{"ruleId":"142","severity":1,"message":"143","line":26,"column":20,"nodeType":"144","endLine":26,"endColumn":41},{"ruleId":"142","severity":1,"message":"143","line":34,"column":19,"nodeType":"144","endLine":34,"endColumn":40},{"ruleId":"142","severity":1,"message":"143","line":35,"column":20,"nodeType":"144","endLine":35,"endColumn":41},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"@typescript-eslint/no-unused-vars","'PlayerActions' is defined but never used.","Identifier","unusedVar","'playersInWatch' is assigned a value but never used.","'setPlayersInWatch' is assigned a value but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has an unnecessary dependency: 'players'. Either exclude it or remove the dependency array. Outer scope values like 'players' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["156"],"React Hook useEffect has a missing dependency: 'filterPlayers'. Either include it or remove the dependency array.",["157"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'twitter' is defined but never used.","'instagram' is defined but never used.","'youtube' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'IPlayer' is defined but never used.","'put' is defined but never used.","'createSelector' is defined but never used.","'PayloadAction' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: []",{"range":"162","text":"163"},"Update the dependencies array to be: [filterPlayers, positionsFilters, teamName, weeklyGames]",{"range":"164","text":"165"},[1658,1667],"[]",[1947,1988],"[filterPlayers, positionsFilters, teamName, weeklyGames]"]